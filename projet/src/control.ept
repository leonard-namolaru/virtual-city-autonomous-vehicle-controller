open Globals

fun dbg_itielt(msg : string; iti : itielt) returns ()
var w0, w1, w2, w3 : Debug.world;
let
  w0 = Debug.d_string(Debug.d_init(), msg);
  switch iti.act
  | Go do w1 = Debug.d_string(w0, "Go");
  | Turn do w1 = Debug.d_string(w0, "Turn");
  | Stop do w1 = Debug.d_string(w0, "Stop");
  end;
    w2 = Debug.d_float(w1, iti.param);
    w3 = Debug.d_string(w2, "\n");
tel

node controller(sens : sensors; iti : itielts)
       returns (rspeed : wheels; arriving : bool)
var i : int;
    actual_speed, reduced_speed, pre_actual_speed : float;
let  
  pre_actual_speed = 0.0 fby actual_speed;
  arriving = (iti[>i<]).act = Stop;
  
  i = if (sens.s_road.green = 255 and sens.s_road.blue = 0 and (0 fby sens.s_road.green) < 255) then (0 fby i + 1) else (0 fby i);

  () = dbg_sensors("sensors : ", sens) ;
  () = dbg_itielt("iti : ", iti[>i<]) ;
  () = dbg_wheels("wheels", rspeed);
  
  switch (iti[>i<]).act
  | Go do actual_speed = (iti[>i<]).param *. 360.0 *. cD /. 100.0 ; reduced_speed = actual_speed -. actual_speed *. 0.1;
  | Turn do actual_speed = pre_actual_speed; reduced_speed = 0.0;
  | Stop do actual_speed = 0.0; reduced_speed = 0.0;
  end;
  rspeed = if sens.s_road.green > 0 then  { left = actual_speed; right = reduced_speed} else if sens.s_road.red > 0 or (iti[>i<]).act = Turn  then  { left = reduced_speed; right = actual_speed } else { left = actual_speed; right = actual_speed };
tel
